# Comments
snippet /*
	/*
	 *
	 */

# Console
snippet c
	console.log(${1:var});${2}
snippet ci
	console.info(${1:var});${2}
snippet cd
	console.dir(${1:var});${2}
snippet cw
	console.warn(${1:var});${2}
snippet ct
	console.table(${1:array});${2}
snippet cg
	console.group(${1:groupName});${2}
snippet cgc
	console.groupCollapsed(${1:groupName});${2}
snippet cge
	console.groupEnd();${2}
# Function
snippet fun
	/*
	 * Brief :
	 * Param : $2
	 * Return:
	 */
	function ${1:function_name}(${2:argument}){
		${3:// body...}
	}
# if
snippet if
	if(${1:true}){
		${2}
	}
# if ... else
snippet ife
	if(${1:true}){
		${2}
	}else{
		${3}
	}
snippet else
	else{
	}
snippet elif
	else if(${1}){
	}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}){
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${1:i} = 0, ${2:j} = ${3:array.length}; $2 < $1; $1${4:++}){
		${5:stuff};
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
snippet addevt
	${1:elt}.addEventListener("${2:event}", ${3:function}, ${4:false|true});${5}
snippet rmevt
	${1:elt}.removeEventListener("${2:event}", ${3:function}, ${4:false|true});${5}
snippet pushstate
	history.pushState(${1:data}, "${2:title}", "${3:url}");${4}
